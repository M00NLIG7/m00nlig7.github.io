I"e<h2 id="math-2720-01---discrete-mathematics">MATH 2720 (01) - DISCRETE MATHEMATICS</h2>

<h3 id="course-summary">Course Summary:</h3>

<p>A mathematical statement is made up of a hypothesis and a conclusion. Implications are an if then relationship. Implications are always true unless, the condition is met but the outcome is not as expected. I personally connect this with my experience with coding and conditional statements as well as loop structures.</p>

<p>Next we move into sets. Once again I was able to connect the idea of sets with arrays/sets/lists in programming. In most languages sets exist and they work in the same way. They are an unordered collection of objects/data. Sets and their relationships are the fundamentals or discrete math.</p>

<p>I know this may be getting repetitive but my relation to these various topics to my background in coding really helps. This stays true with functions. Functions are essentialy a set of instructions that take input and give output. In code the input is called a parameter. Based on that parameter your output will change. The domain is a bit harder to translate to code but it is still similar to specific statically typed languages where you must specify the type of data that can be put into the function. The allowable outputs or the codomain can be related to a return type in most languages.</p>

<p>Now its time to stray away from coding examples for the most part, enter counting.</p>

<p>Starting off with the additive and multiplicative principles. The additive principle basically means that when A OR B can occur you add these possiblities. For example, if you are deciding wehter to eat a hot dog OR a burger, there are two possibilities because $1+1=2$. The multiplicative principle means that when A AND B must both occur you multiply these possibilities. For example, if you are choosing an outfit and have to pick a shirt from a selection of 6 AND a pair of paints from a selection of 3 there are 18 possible outfits because $6*3 = 18$</p>

<p>Next up is binomial coefficients.
Bit-strings, lattice paths, and binomial coefficients all coresepond.
“n choose k” is the number of n-bit strings of weight k. n is the same as the number of lattice paths, and as we know each lattice path is a bit string. This is the correspondence between bit-strings, lattice paths, and binomial coefficients.</p>

<p>Onto combinations and permutations. A permutation is a possible arrangment of objects disregarding order $P(n,k)$. A combination is a possible arrangment of objects where the order matters $n\choose k$.</p>

<p>Starts and Bars!
Stars and bars is a way to look at a problem to find its total amount of combinations and account for over counting. The number of stars corresponds with the number of unchanging objects. The number of bars is the number of changing objects -1. For example:</p>

<p>You have 7 cookies to give to 4 kids. How many ways can you do that? <br />
In this case our 7 stars represent the number of cookies because no matter what these dont change. <br />
Our 3 bars represent the numbers of children or thing we are giving the objects to -1.</p>

<p>⭐⭐|⭐⭐⭐|⭐|⭐
This diagram depicts child A getting two stars, child B getting 3 stars and child C and D getting 1 star. <br />
The way we get the number of ways to distribute the cookies is: \({stars+bars\choose bars}\) In this case the answer is $10\choose 3$.</p>
:ET